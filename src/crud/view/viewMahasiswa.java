/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crud.view;

import crud.controller.controllerMahasiswa;
import crud.controller.interMahasiswa;
import crud.model.Mahasiswa;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.PrintJob;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Touyashi
 */
public class viewMahasiswa extends javax.swing.JFrame {
    List record = new ArrayList();
    interMahasiswa mhsServis;
    int row, isUpdate = 0;
    String imageRightnow = "img\\profile.jpg", updateImageNow = "";
    File fileRightnow;
    
    /**
     * Creates new form viewMahasiswa
     */
    public viewMahasiswa() {
        initComponents();
        mhsServis = new controllerMahasiswa();
        /* This is for when you click the row or data in table the data will show up and you can edit it!
        tContent.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                public void valueChanged(ListSelectionEvent e) {
                    row = tContent.getSelectedRow();
                    if(row!=-1){
                        doEdit();
                    }
                }   
        });*/
        this.statusAwal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imageChooser = new javax.swing.JFileChooser();
        bgGender = new javax.swing.ButtonGroup();
        spPreviewSend = new javax.swing.JScrollPane();
        taPreviewSend = new javax.swing.JTextArea();
        panelDetail = new javax.swing.JPanel();
        lID = new javax.swing.JLabel();
        lNIM = new javax.swing.JLabel();
        lName = new javax.swing.JLabel();
        lBirthDate = new javax.swing.JLabel();
        lJenisKelamin = new javax.swing.JLabel();
        lJurusan = new javax.swing.JLabel();
        lUTS = new javax.swing.JLabel();
        lUAS = new javax.swing.JLabel();
        tfID = new javax.swing.JTextField();
        tfNIM = new javax.swing.JTextField();
        tfName = new javax.swing.JTextField();
        tfUTS = new javax.swing.JTextField();
        tfUAS = new javax.swing.JTextField();
        rbBoy = new javax.swing.JRadioButton();
        rbGirl = new javax.swing.JRadioButton();
        cbJurusanRPL = new javax.swing.JCheckBox();
        cbJurusanMM = new javax.swing.JCheckBox();
        cbJurusanTKJ = new javax.swing.JCheckBox();
        ccbBirthDate = new de.wannawork.jcalendar.JCalendarComboBox();
        buttonEdit = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonReset = new javax.swing.JButton();
        lAgama = new javax.swing.JLabel();
        comBoxAgama = new javax.swing.JComboBox<>();
        buttonExit = new javax.swing.JToggleButton();
        lGRADE = new javax.swing.JLabel();
        tfGRADE = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        imageProfile = new javax.swing.JLabel();
        buttonChangePhoto = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();
        panelListData = new javax.swing.JPanel();
        lFind = new javax.swing.JLabel();
        tfFind = new javax.swing.JTextField();
        buttonFind = new javax.swing.JButton();
        buttonRefresh = new javax.swing.JButton();
        buttonPrint = new javax.swing.JButton();
        buttonPreview = new javax.swing.JButton();
        spTable = new javax.swing.JScrollPane();
        tContent = new javax.swing.JTable();

        taPreviewSend.setColumns(20);
        taPreviewSend.setRows(5);
        spPreviewSend.setViewportView(taPreviewSend);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CRUD MVC SQLite");
        setResizable(false);

        panelDetail.setBorder(javax.swing.BorderFactory.createTitledBorder("Form Data"));
        panelDetail.setForeground(new java.awt.Color(204, 204, 204));
        panelDetail.setMaximumSize(new java.awt.Dimension(291, 512));

        lID.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lID.setText("ID");

        lNIM.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lNIM.setText("NIM");

        lName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lName.setText("Nama");

        lBirthDate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lBirthDate.setText("Tanggal Lahir");

        lJenisKelamin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lJenisKelamin.setText("Jenis Kelamin");

        lJurusan.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lJurusan.setText("Jurusan");

        lUTS.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lUTS.setText("Nilai UTS");

        lUAS.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lUAS.setText("Nilai UAS");

        tfID.setEditable(false);
        tfID.setEnabled(false);

        tfNIM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNIMKeyTyped(evt);
            }
        });

        tfUTS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfUTSKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfUTSKeyTyped(evt);
            }
        });

        tfUAS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfUASKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfUASKeyTyped(evt);
            }
        });

        bgGender.add(rbBoy);
        rbBoy.setSelected(true);
        rbBoy.setText("Laki - Laki");

        bgGender.add(rbGirl);
        rbGirl.setText("Perempuan");

        cbJurusanRPL.setText("RPL");

        cbJurusanMM.setText("MM");

        cbJurusanTKJ.setText("TKJ");

        buttonEdit.setText("Ubah");
        buttonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditActionPerformed(evt);
            }
        });

        buttonDelete.setLabel("Hapus");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonReset.setText("Atur Ulang Form");
        buttonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonResetActionPerformed(evt);
            }
        });

        lAgama.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lAgama.setText("Agama");

        comBoxAgama.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Islam", "Kristen", "Katolik", "Hindu", "Buddha", "Konghucu" }));

        buttonExit.setText("Keluar");
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });

        lGRADE.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lGRADE.setText("Grade");

        tfGRADE.setEditable(false);
        tfGRADE.setEnabled(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Foto"));

        imageProfile.setBackground(new java.awt.Color(255, 51, 153));
        imageProfile.setForeground(new java.awt.Color(102, 0, 204));
        imageProfile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 2));

        buttonChangePhoto.setText("Ganti Foto...");
        buttonChangePhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChangePhotoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonChangePhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonChangePhoto)
                    .addComponent(imageProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonSave.setText("Simpan");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDetailLayout = new javax.swing.GroupLayout(panelDetail);
        panelDetail.setLayout(panelDetailLayout);
        panelDetailLayout.setHorizontalGroup(
            panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelDetailLayout.createSequentialGroup()
                        .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lID)
                            .addComponent(lNIM)
                            .addComponent(lName)
                            .addComponent(lBirthDate))
                        .addGap(23, 23, 23)
                        .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfID)
                            .addComponent(tfNIM)
                            .addComponent(tfName)
                            .addComponent(ccbBirthDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelDetailLayout.createSequentialGroup()
                        .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lUTS)
                            .addComponent(lUAS)
                            .addComponent(lJenisKelamin)
                            .addComponent(lJurusan)
                            .addComponent(lAgama)
                            .addComponent(lGRADE))
                        .addGap(22, 22, 22)
                        .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfGRADE)
                            .addComponent(tfUAS)
                            .addGroup(panelDetailLayout.createSequentialGroup()
                                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfUTS, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comBoxAgama, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(panelDetailLayout.createSequentialGroup()
                                        .addComponent(cbJurusanRPL)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbJurusanMM)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbJurusanTKJ))
                                    .addGroup(panelDetailLayout.createSequentialGroup()
                                        .addComponent(rbBoy)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbGirl)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(panelDetailLayout.createSequentialGroup()
                        .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelDetailLayout.createSequentialGroup()
                        .addComponent(buttonExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelDetailLayout.setVerticalGroup(
            panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lID)
                    .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNIM)
                    .addComponent(tfNIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ccbBirthDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lBirthDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lAgama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comBoxAgama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lJenisKelamin)
                    .addComponent(rbBoy)
                    .addComponent(rbGirl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lJurusan)
                    .addComponent(cbJurusanRPL)
                    .addComponent(cbJurusanMM)
                    .addComponent(cbJurusanTKJ))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lUTS, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfUTS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lUAS)
                    .addComponent(tfUAS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lGRADE)
                    .addComponent(tfGRADE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonEdit, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonDelete)
                        .addComponent(buttonSave)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonReset)
                    .addComponent(buttonExit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelListData.setBorder(javax.swing.BorderFactory.createTitledBorder("All Data"));

        lFind.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lFind.setText("Cari");

        buttonFind.setText("Cari");
        buttonFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFindActionPerformed(evt);
            }
        });

        buttonRefresh.setText("Segarkan");
        buttonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRefreshActionPerformed(evt);
            }
        });

        buttonPrint.setText("Print");
        buttonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPrintActionPerformed(evt);
            }
        });

        buttonPreview.setText("Preview");
        buttonPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPreviewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelListDataLayout = new javax.swing.GroupLayout(panelListData);
        panelListData.setLayout(panelListDataLayout);
        panelListDataLayout.setHorizontalGroup(
            panelListDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelListDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lFind)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfFind)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonFind)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPreview)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPrint)
                .addContainerGap())
        );
        panelListDataLayout.setVerticalGroup(
            panelListDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelListDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelListDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lFind)
                    .addComponent(tfFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonFind)
                    .addComponent(buttonRefresh)
                    .addComponent(buttonPrint)
                    .addComponent(buttonPreview))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        spTable.setPreferredSize(new java.awt.Dimension(635, 501));

        tContent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nama", "Nilai UTS", "Nilai UAS", "Nilai Akhir", "Grade"
            }
        ));
        spTable.setViewportView(tContent);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelListData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(spTable, javax.swing.GroupLayout.DEFAULT_SIZE, 819, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelListData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    void loadData(){
        try {
            record = mhsServis.getAll("");
        } catch (SQLException ex) {
            //Logger.getLogger(viewMahasiswa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    void findData(String nama){
        try {
            record = mhsServis.getAll(nama);
        } catch (SQLException ex) {
            //Logger.getLogger(viewMahasiswa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public ImageIcon ResizeImage(String ImagePath) {
        ImageIcon MyImage = new ImageIcon(ImagePath);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(imageProfile.getWidth(), imageProfile.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
    
    void isiTabel(){
        Object data[][]=new Object[record.size()][6];
        int x = 0;
        
        for (Iterator it = record.iterator(); it.hasNext();) {
            Mahasiswa ss = (Mahasiswa) it.next();
            data[x][0] = ss.getId();
            data[x][1] = ss.getNama();
            data[x][2] = ss.getNilaiUTS();
            data[x][3] = ss.getNilaiUAS();
            data[x][4] = ss.getNilaiAkhir();
            data[x][5] = ss.getGrade();
            x++;
        }
        String judul[]={"ID","Nama","Nilai UTS","Nilai UAS","Nilai Akhir","Grade"};
        tContent.setModel(new DefaultTableModel(data, judul));
        spTable.setViewportView(tContent);
    }

    void kosongkanText(){
        tfName.setText("");
        tfID.setText("");
        tfNIM.setText("");
        tfUAS.setText("");
        tfUTS.setText("");
        tfGRADE.setText("");
        imageRightnow = "img\\profile.jpg";
        updateImageNow = "";
        cbJurusanRPL.setSelected(false);
        cbJurusanMM.setSelected(false);
        cbJurusanTKJ.setSelected(false);
        rbBoy.setSelected(true);
        rbGirl.setSelected(false);
        String date = "2012-12-12";
        java.util.Date date2 = null;
        isUpdate = 0;
        try {
            imageProfile.setIcon(ResizeImage(imageRightnow) );
            date2 = new SimpleDateFormat("yyyy-MM-dd").parse(date);
        } catch (ParseException ex) {
            java.util.logging.Logger.getLogger(viewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        ccbBirthDate.setDate(date2);
    }

    void statusAwal(){
        kosongkanText();
        loadData();
        isiTabel();
    }
    
    public boolean validasi() {
        boolean okkk = false;
        if (!tfNIM.getText().equals("")) {
            okkk = true;
        } else {
            okkk = false;
            JOptionPane.showMessageDialog(this, "NIM tidak boleh kosong");
        }
        if (!tfName.getText().equals("")) {
            okkk = true;
        } else {
            okkk = false;
            JOptionPane.showMessageDialog(this, "Nama tidak boleh kosong");
        }
        if (!tfUAS.getText().equals("")) {
            okkk = true;
        } else {
            okkk = false;
            JOptionPane.showMessageDialog(this, "Nilai UAS tidak boleh kosong");
        }
        if (!tfUTS.getText().equals("")) {
            okkk = true;
        } else {
            okkk = false;
            JOptionPane.showMessageDialog(this, "Nilai UTS tidak boleh kosong");
        }
        
        return okkk;
    }
    
    void doChangePhoto() {
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("JPG, GIF, and PNG Images", "jpg", "gif", "png");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            fileRightnow = chooser.getSelectedFile();
            System.out.println("You chose to open this file: "+ fileRightnow.getName());
            imageRightnow = "img\\" +LocalDateTime.now().getYear()+LocalDateTime.now().getMonth()+LocalDateTime.now().getDayOfMonth()+LocalDateTime.now().getHour()+LocalDateTime.now().getMinute()+LocalDateTime.now().getSecond()+"-"+fileRightnow.getName(); //Logger.getLogger(SaveImageFile.class.getName()).log(Level.SEVERE, null, ex);
            imageProfile.setIcon(ResizeImage(fileRightnow.getPath()));              
        }
    }
    
    void doEdit() {
        int Row_ID = tContent.getSelectedRow();
        if (Row_ID >= 0) {
            //PopupUserResetTitleField("Input");
            String Master_ID =(tContent.getModel().getValueAt(Row_ID, 0).toString());
            this.statusAwal();
            try {
                Mahasiswa okzz = mhsServis.find(Integer.parseInt(Master_ID));
                tfName.setText(okzz.getNama());
                tfID.setText(String.valueOf(okzz.getId()));
                tfNIM.setText(okzz.getNIM());
                tfUAS.setText(String.valueOf(okzz.getNilaiUAS()));
                tfUTS.setText(String.valueOf(okzz.getNilaiUTS()));
                comBoxAgama.setSelectedItem(okzz.getAgama());
                if ("Laki - Laki".equals(okzz.getJenisKelamin())) {
                    rbBoy.setSelected(true);
                } else if ("Perempuan".equals(okzz.getJenisKelamin())) {
                    rbGirl.setSelected(true);
                }
                String asdd[] = okzz.getJurusan().split(", ");
                for (int asd = 0; asd<asdd.length; asd++) {
                    if ("RPL".equals(asdd[asd])) {
                        cbJurusanRPL.setSelected(true);
                    }

                    if ("MM".equals(asdd[asd])) {
                        cbJurusanMM.setSelected(true);
                    }

                    if ("TKJ".equals(asdd[asd])) {
                        cbJurusanTKJ.setSelected(true);
                    }
                }
                java.util.Date date2 = null;
                Path xzz = Paths.get(okzz.getProfileGambar());
                boolean isImgExist = Files.exists(xzz);
                if (okzz.getProfileGambar() == null || !isImgExist) {
                    imageRightnow = "img\\profile.jpg";
                    imageProfile.setIcon(ResizeImage("img\\profile.jpg"));
                } else {
                    imageRightnow = okzz.getProfileGambar();
                    imageProfile.setIcon(ResizeImage(okzz.getProfileGambar()));
                }
                tfGRADE.setText(okzz.getGrade());
                updateImageNow = okzz.getProfileGambar();
                date2 = new SimpleDateFormat("yyyy-MM-dd").parse(okzz.getTanggalLahir());
                ccbBirthDate.setDate(date2);
                isUpdate = 1;
            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(viewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                java.util.logging.Logger.getLogger(viewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }
    }
    
    void doFind() {
        if (!"".equals(tfFind.getText())) {
            this.findData(tfFind.getText());
            isiTabel();
        } else {
            loadData();
            isiTabel();
        }
    }
    
    void doSave() {
        if (validasi()) {
            Date date = ccbBirthDate.getDate();  
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");  
            String strDate = dateFormat.format(date);

            String jurusan;
            String gender = null;
            jurusan ="";
            if (cbJurusanRPL.isSelected()) {
                jurusan += cbJurusanRPL.getText() + ", ";
            }
            if (cbJurusanMM.isSelected()) {
                jurusan += cbJurusanMM.getText() + ", ";
            }
            if (cbJurusanTKJ.isSelected()) {
                jurusan += cbJurusanTKJ.getText() + ", ";
            }
            if (jurusan.equals("")) {
                //jTextField1.setText("Anda tidak memilih hobi");            
            } else {
                jurusan = jurusan.substring(0, jurusan.length()-2);
            }

            if (rbBoy.isSelected()) {
                gender = "Laki - Laki";
            } else if (rbGirl.isSelected()) {
                gender = "Perempuan";
            }

            int idss = 0;

            if (tfID.getText() != null && !tfID.getText().equals("")) {
                idss = Integer.parseInt(tfID.getText());
            }

            try {
                Mahasiswa mhs = new Mahasiswa(
                        idss,
                        tfNIM.getText(),
                        tfName.getText(),
                        strDate,
                        gender,
                        jurusan,
                        imageRightnow,
                        Float.parseFloat(tfUTS.getText()),
                        Float.parseFloat(tfUAS.getText()),
                        comBoxAgama.getSelectedItem().toString()
                );

                if (isUpdate == 1) {
                    mhsServis.update(mhs);
                } else {
                    mhsServis.insert(mhs);
                }

                if (!updateImageNow.equals(imageRightnow) && fileRightnow != null){
                     BufferedImage image;
                    try {
                        image = ImageIO.read(fileRightnow);
                        ImageIO.write(image, "jpg",new File(imageRightnow));
                    } catch (IOException ex) {
                        //Logger.getLogger(SaveImageFile.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                }

                this.statusAwal();
                JOptionPane.showMessageDialog(this, "Data Tersimpan");
            } catch (SQLException ex) {
                //Logger.getLogger(viewMahasiswa.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    void doPrint() {
        PrintJob p = getToolkit().getPrintJob(this,"Report",null);
        Graphics g = p.getGraphics();
        g.setFont(new Font("Serif",Font.BOLD,18));
        g.drawString("Daftar Nilai", 250, 50);
        g.setFont(new Font("Serif",Font.BOLD,12));
        g.drawString("No", 25, 100);
        g.drawString("Gambar", 50, 100);
        g.drawString("NIM", 115, 100);
        g.drawString("Nama", 160, 100);
        g.drawString("Nilai UTS", 330, 100);
        g.drawString("Nilai UAS", 410, 100);
        g.drawString("Nilai Akhir", 480, 100);
        g.drawString("Grade", 560, 100);
        g.drawLine(15, 110, 600, 110);
        g.setFont(new Font("Serif",Font.PLAIN,12));
        Object data[][]=new Object[record.size()][6];
        int x = 0;
        for (Iterator it = record.iterator(); it.hasNext();) {
            Mahasiswa ss = (Mahasiswa) it.next();
            String wahh = "img\\profile.jpg";
            if (ss.getProfileGambar() != null && !"".equals(ss.getProfileGambar())) {
                wahh = ss.getProfileGambar();
            }
            Image imaged = new ImageIcon(wahh).getImage();
            g.drawString(String.valueOf(x+1), 25, 150 + (x * 60));
            g.drawImage(imaged, 50, 120 + (x * 60), 50, 50, null);
            g.drawString(ss.getNIM(), 115, 150 + (x * 60));
            g.drawString(ss.getNama(), 160, 150 + (x * 60));
            g.drawString(String.valueOf(ss.getNilaiUTS()), 330, 150 + (x * 60));
            g.drawString(String.valueOf(ss.getNilaiUAS()), 410, 150 + (x * 60));
            g.drawString(String.valueOf(ss.getNilaiAkhir()), 480, 150 + (x * 60));
            g.drawString(String.valueOf(ss.getGrade()), 560, 150 + (x * 60));
            x++;
        }
        p.end();
    }
    
    void doPreview() {
        crud.view.Preview preview = new crud.view.Preview();
        String formatyo = "%1$2s %2$-5s %3$-12s %4$-10s %5$-10s %6$-12s %7$-5s";
        String formatyo2 = "%1$-2s %2$-5s %3$-12s %4$-10s %5$-10s %6$-12s %7$-2s";
        String yehh;
        taPreviewSend.setText("Daftar Nilai\n");
        taPreviewSend.append(String.format(formatyo, "No", "NIM", "Nama", "Nilai UTS", "Nilai UAS", "Nilai Akhir", "Grade\n"));
        int x = 0;
        for (Iterator it = record.iterator(); it.hasNext();) {
            Mahasiswa ss = (Mahasiswa) it.next();
            yehh = String.format(formatyo2, x+1, ss.getNIM(), ss.getNama(), ss.getNilaiUTS(), ss.getNilaiUAS(), ss.getNilaiAkhir(), ss.getGrade());
            taPreviewSend.append(yehh+"\n");
            //jTextArea1.append(+"\t-20f"++"\t"+ss.getNama()+"\t"+String.valueOf(ss.getNilaiUTS())+"\t"+String.valueOf(ss.getNilaiUAS())+"\t"+String.valueOf(ss.getNilaiAkhir())+"\t"+String.valueOf(ss.getGrade())+"\n");
            x++;
        }
        preview.runPreview(taPreviewSend.getText());
    }
    
    void doDelete() {
        int Row_ID = tContent.getSelectedRow();
        if (Row_ID >= 0) {
            //PopupUserResetTitleField("Input");
            String Master_ID =(tContent.getModel().getValueAt(Row_ID, 0).toString());
            String Master_Nama =(tContent.getModel().getValueAt(Row_ID, 1).toString());
            this.statusAwal();
            try {
                if (JOptionPane.showConfirmDialog(null, "Apakah anda ingin menghapus "+Master_Nama, "WARNING", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    mhsServis.delete(Integer.parseInt(Master_ID));
                }
                
                this.statusAwal();
            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(viewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }
    }
    
    void checkGrade() {
        if (!"".equals(tfUTS.getText()) && !"".equals(tfUAS.getText())) {
            Mahasiswa mhs = new Mahasiswa();
            mhs.setNilaiUAS(Float.parseFloat(tfUAS.getText()));
            mhs.setNilaiUTS(Float.parseFloat(tfUTS.getText()));
            this.tfGRADE.setText(mhs.getGrade());
        }
    }

    private void buttonFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFindActionPerformed
        // TODO add your handling code here:
        doFind();
    }//GEN-LAST:event_buttonFindActionPerformed

    private void buttonChangePhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChangePhotoActionPerformed
        // TODO add your handling code here:
        doChangePhoto();
    }//GEN-LAST:event_buttonChangePhotoActionPerformed

    private void buttonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditActionPerformed
        // TODO add your handling code here:
        doEdit();
    }//GEN-LAST:event_buttonEditActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        // TODO add your handling code here:
        doDelete();
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonResetActionPerformed
        // TODO add your handling code here:
        this.statusAwal();
    }//GEN-LAST:event_buttonResetActionPerformed

    private void buttonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRefreshActionPerformed
        // TODO add your handling code here:
        this.loadData();
        isiTabel();
    }//GEN-LAST:event_buttonRefreshActionPerformed

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_buttonExitActionPerformed
    
    private void tfUTSKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfUTSKeyReleased
        // TODO add your handling code here:
        checkGrade();
    }//GEN-LAST:event_tfUTSKeyReleased

    private void tfUASKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfUASKeyReleased
        // TODO add your handling code here:
        checkGrade();
    }//GEN-LAST:event_tfUASKeyReleased

    private void buttonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrintActionPerformed
        // TODO add your handling code here:
        doPrint();
    }//GEN-LAST:event_buttonPrintActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        // TODO add your handling code here:
        doSave();
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void tfNIMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNIMKeyTyped
        // TODO add your handling code here:
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_tfNIMKeyTyped

    private void tfUTSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfUTSKeyTyped
        // TODO add your handling code here:
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_tfUTSKeyTyped

    private void tfUASKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfUASKeyTyped
        // TODO add your handling code here:
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_tfUASKeyTyped

    private void buttonPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPreviewActionPerformed
        // TODO add your handling code here:
        doPreview();
    }//GEN-LAST:event_buttonPreviewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new viewMahasiswa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgGender;
    private javax.swing.JButton buttonChangePhoto;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonEdit;
    private javax.swing.JToggleButton buttonExit;
    private javax.swing.JButton buttonFind;
    private javax.swing.JButton buttonPreview;
    private javax.swing.JButton buttonPrint;
    private javax.swing.JButton buttonRefresh;
    private javax.swing.JButton buttonReset;
    private javax.swing.JButton buttonSave;
    private javax.swing.JCheckBox cbJurusanMM;
    private javax.swing.JCheckBox cbJurusanRPL;
    private javax.swing.JCheckBox cbJurusanTKJ;
    private de.wannawork.jcalendar.JCalendarComboBox ccbBirthDate;
    private javax.swing.JComboBox<String> comBoxAgama;
    private javax.swing.JFileChooser imageChooser;
    private javax.swing.JLabel imageProfile;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lAgama;
    private javax.swing.JLabel lBirthDate;
    private javax.swing.JLabel lFind;
    private javax.swing.JLabel lGRADE;
    private javax.swing.JLabel lID;
    private javax.swing.JLabel lJenisKelamin;
    private javax.swing.JLabel lJurusan;
    private javax.swing.JLabel lNIM;
    private javax.swing.JLabel lName;
    private javax.swing.JLabel lUAS;
    private javax.swing.JLabel lUTS;
    private javax.swing.JPanel panelDetail;
    private javax.swing.JPanel panelListData;
    private javax.swing.JRadioButton rbBoy;
    private javax.swing.JRadioButton rbGirl;
    private javax.swing.JScrollPane spPreviewSend;
    public javax.swing.JScrollPane spTable;
    public javax.swing.JTable tContent;
    private javax.swing.JTextArea taPreviewSend;
    private javax.swing.JTextField tfFind;
    private javax.swing.JTextField tfGRADE;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfNIM;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfUAS;
    private javax.swing.JTextField tfUTS;
    // End of variables declaration//GEN-END:variables
}
